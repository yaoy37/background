import numpy as np
from scipy.io import wavfile
from scipy.io.wavfile import write

sample_rate = 44100  # 采样率（1秒钟的字节数据量）
audio_value = 0.02  # 300
energy_value = 0.01  # 100
speak_interval = 1024 * 2 * 10  # 大概半秒的接收数据量
DATA = {
    "received_data": np.array([]),
    "window_size": speak_interval,
}


class SentenceLogic:
    def __init__(self):
        self.s_time = 0
        self.flag = False  # 判断是否为分句
        self.index = 1
        self.median_energy_window_index = 0
        self.median_energy_window_size = 4
        self.median_energy_window = []

    def calc_audio_energy(self):
        _max = None
        self.index += 1
        if len(DATA["received_data"]) >= speak_interval:  # 等待大于0.5秒的数据做处理
            r_d = DATA["received_data"][-DATA.get("window_size"):]
            diff = np.abs(np.diff(r_d))
            _max = np.max(diff)  # 最大的声音差量值
            median_energy = np.mean(diff)  # 平均声音差（平均能量）
            if self.median_energy_window_index >= self.median_energy_window_size:
                self.median_energy_window_index = 0
            self.median_energy_window.insert(self.median_energy_window_index, median_energy)
            self.median_energy_window_index += 1
            print(_max, median_energy,sum(self.median_energy_window) / len(self.median_energy_window))
            if _max < (sum(self.median_energy_window) / len(self.median_energy_window)):
                self.flag = True
            else:
                self.s_time += 1
                self.flag = False
        if self.flag:  # 说明可以返回句子
            if not self.s_time:  # 说明第一个数据为 静音数据，无实用数据，丢弃
                DATA["received_data"] = np.array([])
                self.flag = False
                return None
            self.s_time = 0
            return True  # 有实用数据
        return None

    def forecast_sentence(self, data):
        # print(data)
        DATA["received_data"] = np.append(DATA["received_data"], data)
        if self.calc_audio_energy():
            r = DATA["received_data"]
            DATA["received_data"] = np.array([])
            return r
        return []
[np.float64(31.77341537259498), np.float64(29.95136243773806), np.float64(27.700361363414395), np.float64(17.303252270729562), np.float64(42.259790995214374), np.float64(39.210469772438714), np.float64(35.68239085848227), np.float64(33.20480515675359), np.float64(46.95341341927923), np.float64(44.29202070514699), np.float64(41.973239574177164), np.float64(41.61500146498682), np.float64(56.92352768825081), np.float64(56.61470846762379), np.float64(55.444672331282355), np.float64(53.89784158609239), np.float64(60.62056841488427), np.float64(61.14405703682), np.float64(58.60884852036332), np.float64(58.34397890418986), np.float64(50.372692645766186), np.float64(52.98564312921184), np.float64(59.52007031936713), np.float64(60.74694794413517), np.float64(45.129797831819516), np.float64(45.680242211153434), np.float64(48.65162613536478), np.float64(49.69469674772927), np.float64(43.37142299052642), np.float64(45.693720089852526), np.float64(47.555034671354626), np.float64(46.71276491844907), np.float64(25.51225705635316), np.float64(37.485691962105676), np.float64(40.901064557085654), np.float64(41.32571540189472), np.float64(38.50649477488036), np.float64(36.38695185076668), np.float64(33.05557183318683), np.float64(29.24406680339877), np.float64(39.53589217697041), np.float64(40.93524758277176), np.float64(41.76032815704659), np.float64(40.532473874401795), np.float64(29.86365856040629), np.float64(29.346029885731028), np.float64(28.341048930559626), np.float64(27.703486668619984), np.float64(26.142201386854186), np.float64(26.71432757105186), np.float64(28.217990038089656), np.float64(29.64605918546733), np.float64(26.354331477683367), np.float64(25.740404336360974), np.float64(25.082918253735716), np.float64(25.936321906436174), np.float64(27.323176091415178), np.float64(26.546733079402287), np.float64(25.87537845492724), np.float64(26.080476609043853), np.float64(33.978513526711595), np.float64(33.740209004785626), np.float64(31.447992968063286), np.float64(28.736009375915618), np.float64(30.744213302080283), np.float64(30.71491356577791), np.float64(32.183807012403555), np.float64(33.892762965133315), np.float64(26.73503271803887), np.float64(29.025686102158414), np.float64(30.38831917179412), np.float64(31.05029788065241), np.float64(25.13956441058697), np.float64(24.738353354819807), np.float64(25.610704170329132), np.float64(25.390565484910635), np.float64(25.257544682097862), np.float64(25.287235081550932), np.float64(26.302177947065143), np.float64(26.605527883582383), np.float64(36.43734739720676), np.float64(28.64947748803594), np.float64(25.793143861705246), np.float64(25.31321418107237), np.float64(31.242894813946673), np.float64(32.62115440961031), np.float64(34.6715499560504), np.float64(35.991405410684635), np.float64(27.593319660123058), np.float64(28.68424650844809), np.float64(29.44271901552886), np.float64(30.309405215353063), np.float64(21.768336751635903), np.float64(18.854966305303254), np.float64(14.620373083308916), np.float64(23.605430217794705), np.float64(45.310479539017486), np.float64(36.109190350620175), np.float64(26.530911221799006), np.float64(24.1267701924016), np.float64(76.76823908584822), np.float64(70.10391639808574), np.float64(62.934856919621055), np.float64(54.274050200214866), np.float64(95.72536380505909), np.float64(91.32942670182635), np.float64(86.77683367516359), np.float64(82.9819318292802), np.float64(15.888270338900282), np.float64(16.300419962887002), np.float64(15.768141420060553), np.float64(86.06543607774196), np.float64(18.801250122082234), np.float64(14.745385291532376), np.float64(12.262720968844613), np.float64(10.740892665299345), np.float64(23.684539505811113), np.float64(22.690497118859263), np.float64(22.40863365563043), np.float64(23.17452876257447), np.float64(28.36761402480711), np.float64(26.554351010840904), np.float64(25.296220334016994), np.float64(25.07940228537943), np.float64(29.466940130872157), np.float64(29.233323566754567), np.float64(29.1798027151089), np.float64(29.552300029299737), np.float64(29.90721750170915), np.float64(30.00703193671257), np.float64(30.314093173161442), np.float64(30.237523195624572), np.float64(33.11475730051763), np.float64(30.36527004590292), np.float64(29.46342416251587), np.float64(29.86541654458443), np.float64(49.41888856333626), np.float64(51.21261841976756), np.float64(41.16554351010841), np.float64(35.91131946479148), np.float64(52.81765797441157), np.float64(50.967672624279714), np.float64(49.11495263209298), np.float64(47.702119347592536), np.float64(43.297978318195135), np.float64(48.33304033597031), np.float64(50.6242797148159), np.float64(52.093563824592245), np.float64(35.17960738353355), np.float64(36.39613243480809), np.float64(35.39798808477391), np.float64(33.14698701045024), np.float64(32.108995019044826), np.float64(31.941205195819904), np.float64(31.217697040726634), np.float64(33.14933098935443), np.float64(46.22892860630921), np.float64(37.46537747826936), np.float64(32.67994921379041), np.float64(31.550542045121595), np.float64(40.112510987401116), np.float64(42.26994823713253), np.float64(44.12423088192206), np.float64(45.53003222970993), np.float64(29.579646449848617), np.float64(32.609043851938665), np.float64(34.11387830842856), np.float64(36.790506885438035), np.float64(19.598398281082137), np.float64(18.391835140150405), np.float64(15.071784353940815), np.float64(12.068561382947554), np.float64(26.780154311944525), np.float64(25.41302861607579), np.float64(25.367321027444085), np.float64(24.600058599472604), np.float64(26.345346225217305), np.float64(26.52466061138783), np.float64(26.847543705439985), np.float64(26.750659244066803), np.float64(25.672428948139466), np.float64(24.582283426115833), np.float64(23.742552983689812), np.float64(26.04434026760426), np.float64(23.439398378747924), np.float64(23.536087508545755), np.float64(24.158804570758864), np.float64(26.003711299931634), np.float64(21.16554351010841), np.float64(22.18009571247192), np.float64(22.58501806817072), np.float64(23.08936419572224), np.float64(16.80242211153433), np.float64(16.70280300810626), np.float64(18.485203633167302), np.float64(19.91874206465475), np.float64(16.912393788455905), np.float64(16.303545268092588), np.float64(15.911124133216134), np.float64(16.234593221994334), np.float64(21.529250903408535), np.float64(20.986619787088582), np.float64(20.659634729954096), np.float64(20.595175310088877), np.float64(22.80886805352085), np.float64(22.895399941400527), np.float64(22.725461470846763), np.float64(22.493798222482663), np.float64(11.99980466842465), np.float64(21.674968258619007), np.float64(22.393983787479247), np.float64(22.743822638929583), np.float64(2.3346029885731028), np.float64(5.4563922258033015), np.float64(11.842953413419279), np.float64(12.187908975485888), np.float64(3.07744896962594), np.float64(2.910049809551714), np.float64(2.070514698701045), np.float64(1.4655728098447114)]